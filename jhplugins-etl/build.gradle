buildscript {
	ext {
		springBootVersion = '2.1.1.RELEASE'
		lombokVersion = '1.18.4'
		mapstructVersion = '1.2.0.Final'
	}
	repositories {
		mavenCentral()
		jcenter()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
	}
}

plugins {
	id 'java'
	id 'eclipse'
	//id 'com.bmuschko.docker-spring-boot-application' version '4.4.1'
}

apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

group = 'com.jh'
version = '1.0'
sourceCompatibility = '1.11'
archivesBaseName = 'jhplugins-etl'

//sourceSets { 
	//main { 
		//java{
			
		//}
		//resources { 
			//exclude '**/**' 
		//}
	//}
//}

/*bootRun {
	systemProperty "spring.config.location", "file:./configs/,./configs/db-config.properties"
}*/

repositories {
	mavenCentral()
}

dependencies {
	compile('org.springframework.boot:spring-boot-starter')
	compile 'org.springframework.boot:spring-boot-starter-data-jpa'
	
	compile group: 'commons-net', name: 'commons-net', version: '3.6'
	compile group:'com.univocity', name:'univocity-parsers', version:'2.7.6'
	compile 'mysql:mysql-connector-java'
	
	compileOnly("org.projectlombok:lombok:$lombokVersion")
	annotationProcessor("org.projectlombok:lombok:$lombokVersion")
	
	compile "org.mapstruct:mapstruct-jdk8:${mapstructVersion}"
	annotationProcessor "org.mapstruct:mapstruct-processor:${mapstructVersion}"
	
	testImplementation('org.springframework.boot:spring-boot-starter-test')
	testCompile "org.mapstruct:mapstruct-jdk8:${mapstructVersion}"
}

test {
    testLogging {
        showStandardStreams = true
        exceptionFormat = 'full'
        events 'started', 'passed', 'failed'
    }
}

/*docker {
	springBootApplication {
		baseImage = 'openjdk:11-jre-slim'
	}
}

dockerBuildImage {
	repositories { jcenter() }
}*/