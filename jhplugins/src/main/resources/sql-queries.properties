query.orgilldb.get.items.byskus=select ItemLookupCode as sku from ${orgill.database.name}.dbo.Item where ItemLookupCode in (#SKUS#) 

query.dynamicsdb.copy.item.bysku=declare @SKU nvarchar(25), @DEPT_CODE nvarchar(25), @CATE_CODE nvarchar(25); \
									set @SKU = ?; \
									select @DEPT_CODE = DEPT_ID, @CATE_CODE = CATEGORY_ID from ${orgill.database.name}.dbo.WebItem where SKU = @SKU; \
									\
									if (select count(*) from dbo.Department where code = @DEPT_CODE) = 0 \
										insert into dbo.Department (code, Name) \
										select DEPT_CODE, NAME from ${orgill.database.name}.dbo.WebCategory wc where DEPT_CODE = @DEPT_CODE AND SUB_CODE = '000' AND CATEGORY_CODE = '00000'; \
									\
									if (select count(*) from dbo.Category where code = @CATE_CODE) = 0 \
										insert into dbo.Category (DepartmentID, Code, Name) \
										select d.ID as deptId, w.CATEGORY_CODE as categoryCode, w.NAME as categoryName FROM ${orgill.database.name}.dbo.WebCategory w INNER JOIN dbo.Department d ON w.DEPT_CODE = d.code WHERE w.CATEGORY_CODE = @CATE_CODE; \
									\
									if (select count(*) from dbo.Item where ItemLookupCode = @SKU) = 0 begin \
										insert INTO [dbo].[Item] ([BinLocation],[BuydownPrice],[BuydownQuantity],[CommissionAmount],[CommissionMaximum],[CommissionMode],[CommissionPercentProfit],[CommissionPercentSale],[Description],[FoodStampable],[HQID],[ItemNotDiscountable],[LastReceived],[LastUpdated],[Notes],[QuantityCommitted],[SerialNumberCount],[TareWeightPercent],[ItemLookupCode],[DepartmentID],[CategoryID],[MessageID],[Price],[PriceA],[PriceB],[PriceC],[SalePrice],[SaleStartDate],[SaleEndDate],[QuantityDiscountID],[TaxID],[ItemType],[Cost],[Quantity],[ReorderPoint],[RestockLevel],[TareWeight],[SupplierID],[TagAlongItem],[TagAlongQuantity],[ParentItem],[ParentQuantity],[BarcodeFormat],[PriceLowerBound],[PriceUpperBound],[PictureName],[LastSold],[ExtendedDescription],[SubDescription1],[SubDescription2],[SubDescription3],[UnitOfMeasure],[SubCategoryID],[QuantityEntryNotAllowed],[PriceMustBeEntered],[BlockSalesReason],[BlockSalesAfterDate],[Weight],[Taxable],[BlockSalesBeforeDate],[LastCost],[ReplacementCost],[WebItem],[BlockSalesType],[BlockSalesScheduleID],[SaleType],[SaleScheduleID],[Consignment],[LastCounted],[DoNotOrder],[MSRP],[DateCreated],[Content],[UsuallyShip]) \
										select '',0,0,0,0,0,0,0,NOMENCLATURE_EXT,0,0,0,NULL,current_timestamp,NULL,0,0,0,SKU,d.ID,c.ID,0,w.SUGGESTED_RETAIL/100,0,0,0,0,NULL,NULL,0,(select top 1 ID from dbo.ItemTax with (NOLOCK) order by ID),0,ADV_PRICE/100,0,0,0,0,isnull(s.ID,0),0,0,0,0,3,0,0,w.IMAGE,NULL,'',FACTORY,'','',substring(w.RETAIL_UNIT_OF_MEASURE,0,5),0,0,0,'',NULL,0,1,NULL,0,0,0,0,0,0,0,0,NULL,0,0,current_timestamp,'','' from ${orgill.database.name}.dbo.WebItem w LEFT JOIN dbo.Department d ON d.code = w.DEPT_ID LEFT JOIN dbo.Category c ON c.Code = w.CATEGORY_ID OUTER APPLY(SELECT TOP 1 ID from dbo.Supplier where SupplierName LIKE '%ORGILL%') s WHERE w.SKU = @SKU; \
										insert INTO dbo.SupplierList (MinimumOrder,ItemID,SupplierID,Cost,ReorderNumber,MasterPackQuantity,TaxRate) select 0, ID, SupplierID, Cost, '', 0, 0 from dbo.Item where ItemLookupCode = @SKU; \
									end \
									\
									IF (select count(*) from dbo.Alias where Alias in (SELECT UPC_CODE from ${orgill.database.name}.dbo.WebItem where SKU = @SKU)) = 0 \
										insert INTO dbo.Alias (ItemID,Alias) \
										select TOP 1 i.ID, w.UPC_CODE from ${orgill.database.name}.dbo.WebItem w inner JOIN dbo.Item i ON w.SKU = i.ItemLookupCode and w.SKU = @SKU; \
									\
									select 1 as status;
									
query.orgilldb.get.itemdetails.bysku=declare @itemIdFromAlias int; \
										set @itemIdFromAlias = (select top 1 ItemId from ${orgill.database.name}.dbo.Alias where Alias = ?); \
										select top 1 i.cost as costPrice, \
										i.price as retailPrice, \
										i.id, \
										i.ItemLookupCode as sku, \
										i.Description, \
										c.Name as categoryName, \
										d.Name as deptName, \
										case when (select top 1 ID from dbo.Item where ItemLookupCode = i.ItemLookupCode) is null then 0 else 1 end as isItemExist \
									from ${orgill.database.name}.dbo.Item i \
										left join ${orgill.database.name}.dbo.Category c on c.ID = i.CategoryId \
										left join ${orgill.database.name}.dbo.Department d on d.ID = i.DepartmentId \
									where i.ItemLookupCode = ? or i.ID = @itemIdFromAlias;